(set_ex
 (conj1 0
  (conj1-1 nil 3685399933
   ("" (expand "member")
    (("" (expand "SET1") (("" (propax) nil nil)) nil)) nil)
   ((SET1 const-decl "set[RESOURCE]" set_ex nil)
    (member const-decl "bool" sets nil))
   shostak))
 (conj2 0
  (conj2-1 nil 3685400070
   ("" (expand "SET1") (("" (propax) nil nil)) nil)
   ((SET1 const-decl "set[RESOURCE]" set_ex nil)) shostak))
 (conj3 0
  (conj3-1 nil 3685400082
   ("" (apply-extensionality)
    (("" (delete 2)
      (("" (expand "add")
        (("" (expand "member")
          (("" (expand "SET3")
            (("" (expand "UNIVERSE")
              (("" (flatten) (("" (assert) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((member const-decl "bool" sets nil)
    (nonempty? const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (r4? adt-recognizer-decl "[RESOURCE -> boolean]" set_ex nil)
    (r4 adt-constructor-decl "(r4?)" set_ex nil)
    (SET3 const-decl "set[RESOURCE]" set_ex nil)
    (UNIVERSE const-decl "set[RESOURCE]" set_ex nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (RESOURCE type-decl nil set_ex nil))
   shostak))
 (conj4 0
  (conj4-1 nil 3685401183
   ("" (expand "remove")
    (("" (expand "SET1")
      (("" (expand "member")
        (("" (apply-extensionality)
          (("" (delete 2)
            (("" (iff)
              (("" (split)
                (("1" (flatten)
                  (("1" (expand "SET3") (("1" (assert) nil nil)) nil))
                  nil)
                 ("2" (flatten)
                  (("2" (expand "SET3")
                    (("2" (split)
                      (("1" (assert) nil nil) ("2" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((SET1 const-decl "set[RESOURCE]" set_ex nil)
    (boolean nonempty-type-decl nil booleans nil)
    (RESOURCE type-decl nil set_ex nil)
    (r2 adt-constructor-decl "(r2?)" set_ex nil)
    (r2? adt-recognizer-decl "[RESOURCE -> boolean]" set_ex nil)
    (r1 adt-constructor-decl "(r1?)" set_ex nil)
    (r1? adt-recognizer-decl "[RESOURCE -> boolean]" set_ex nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (SET3 const-decl "set[RESOURCE]" set_ex nil)
    (set type-eq-decl nil sets nil)
    (r3 adt-constructor-decl "(r3?)" set_ex nil)
    (r3? adt-recognizer-decl "[RESOURCE -> boolean]" set_ex nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (member const-decl "bool" sets nil)
    (remove const-decl "set" sets nil))
   shostak))
 (conj5 0
  (conj5-1 nil 3685402305
   ("" (apply-extensionality)
    (("" (delete 2)
      (("" (expand UNIVERSE)
        (("" (expand "union")
          (("" (expand "SET1")
            (("" (expand "member")
              (("" (expand "SET2")
                (("" (flatten) (("" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((member const-decl "bool" sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (UNIVERSE const-decl "set[RESOURCE]" set_ex nil)
    (union const-decl "set" sets nil)
    (SET1 const-decl "set[RESOURCE]" set_ex nil)
    (SET2 const-decl "set[RESOURCE]" set_ex nil)
    (boolean nonempty-type-decl nil booleans nil)
    (RESOURCE type-decl nil set_ex nil))
   shostak))
 (conj6 0
  (conj6-1 nil 3685402393
   ("" (apply-extensionality)
    (("" (delete 2)
      (("" (expand "intersection")
        (("" (expand "member")
          (("" (expand "SET1")
            (("" (expand "SET2")
              (("" (expand "emptyset")
                (("" (flatten)
                  (("" (split)
                    (("1" (assert) nil nil) ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((member const-decl "bool" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (intersection const-decl "set" sets nil)
    (SET1 const-decl "set[RESOURCE]" set_ex nil)
    (SET2 const-decl "set[RESOURCE]" set_ex nil)
    (emptyset const-decl "set" sets nil)
    (boolean nonempty-type-decl nil booleans nil)
    (RESOURCE type-decl nil set_ex nil))
   shostak))
 (conj7 0
  (conj7-1 nil 3685402455
   ("" (apply-extensionality)
    (("" (delete 2)
      (("" (expand "intersection")
        (("" (expand "singleton")
          (("" (expand "member")
            (("" (expand "SET2")
              (("" (expand "SET3")
                (("" (iff)
                  (("" (split)
                    (("1" (flatten) (("1" (assert) nil nil)) nil)
                     ("2" (flatten) (("2" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((member const-decl "bool" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (intersection const-decl "set" sets nil)
    (SET2 const-decl "set[RESOURCE]" set_ex nil)
    (SET3 const-decl "set[RESOURCE]" set_ex nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (r3? adt-recognizer-decl "[RESOURCE -> boolean]" set_ex nil)
    (r3 adt-constructor-decl "(r3?)" set_ex nil)
    (boolean nonempty-type-decl nil booleans nil)
    (RESOURCE type-decl nil set_ex nil))
   shostak))
 (conj8 0
  (conj8-1 nil 3685402580
   ("" (apply-extensionality)
    (("" (delete 2)
      (("" (expand "remove")
        (("" (expand "member")
          (("" (expand "SET1")
            (("" (expand "add")
              (("" (expand "member")
                (("" (iff)
                  (("" (split)
                    (("1" (flatten) (("1" (assert) nil nil)) nil)
                     ("2" (flatten)
                      (("2" (split)
                        (("1" (assert) nil nil) ("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((member const-decl "bool" sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (remove const-decl "set" sets nil)
    (r3? adt-recognizer-decl "[RESOURCE -> boolean]" set_ex nil)
    (r3 adt-constructor-decl "(r3?)" set_ex nil)
    (nonempty? const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (SET1 const-decl "set[RESOURCE]" set_ex nil)
    (boolean nonempty-type-decl nil booleans nil)
    (RESOURCE type-decl nil set_ex nil))
   shostak)))

