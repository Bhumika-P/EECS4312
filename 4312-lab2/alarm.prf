(alarm
 (conjecture1 0
  (conjecture1-1 nil 3683556310
   ("" (flatten)
    (("" (skosimp*)
      (("" (inst 1 "x!1") (("" (inst -1 "y!1") nil nil)) nil)) nil))
    nil)
   ((T nonempty-type-decl nil alarm nil)) shostak))
 (conjecture2 0
  (conjecture2-1 nil 3683554884
   ("" (flatten) (("" (postpone) nil nil)) nil) nil shostak))
 (conjecture3 0
  (conjecture3-1 nil 3683554587
   ("" (inst + "electrical")
    (("" (induct "e")
      (("1" (assert)
        (("1" (lemma "axm1") (("1" (assert) nil nil)) nil)) nil)
       ("2" (lemma "axm2") (("2" (inst?) nil nil)) nil))
      nil))
    nil)
   ((EXPERT type-decl nil alarm nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (handles const-decl "bool" alarm nil)
    (EXPERT_induction formula-decl nil alarm nil)
    (axm1 formula-decl nil alarm nil) (axm2 formula-decl nil alarm nil)
    (electrical adt-constructor-decl "(electrical?)" alarm nil)
    (electrical? adt-recognizer-decl "[ALARM -> boolean]" alarm nil)
    (boolean nonempty-type-decl nil booleans nil)
    (ALARM type-decl nil alarm nil))
   shostak))
 (conjecture4 0
  (conjecture4-1 nil 3683556009
   ("" (flatten)
    (("" (skosimp*)
      (("" (inst?)
        (("" (lemma "axm1")
          (("" (flatten)
            (("" (assert)
              (("" (lemma "axm1")
                (("" (inst 1 "electrical")
                  (("" (assert)
                    (("" (assert)
                      (("" (prop)
                        (("" (lemma "axm2")
                          (("" (inst?)
                            (("" (lemma "axm2")
                              ((""
                                (inst -1 "mechanical")
                                (("" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((axm1 formula-decl nil alarm nil) (ALARM type-decl nil alarm nil)
    (boolean nonempty-type-decl nil booleans nil)
    (electrical? adt-recognizer-decl "[ALARM -> boolean]" alarm nil)
    (electrical adt-constructor-decl "(electrical?)" alarm nil)
    (axm2 formula-decl nil alarm nil)
    (mechanical adt-constructor-decl "(mechanical?)" alarm nil)
    (mechanical? adt-recognizer-decl "[ALARM -> boolean]" alarm nil)
    (EXPERT type-decl nil alarm nil))
   shostak)))

